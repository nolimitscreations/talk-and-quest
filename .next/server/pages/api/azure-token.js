"use strict";(()=>{var e={};e.id=440,e.ids=[440],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},9941:(e,t,r)=>{r.r(t),r.d(t,{config:()=>c,default:()=>u,routeModule:()=>d});var n={};r.r(n),r.d(n,{default:()=>s});var o=r(1802),i=r(7153),a=r(6249);async function s(e,t){let r=process.env.AZURE_SPEECH_KEY,n=process.env.AZURE_SPEECH_REGION;if(!r||!n)return t.status(500).json({error:"Azure Speech not configured on server."});try{let e=await fetch(`https://${n}.api.cognitive.microsoft.com/sts/v1.0/issueToken`,{method:"POST",headers:{"Ocp-Apim-Subscription-Key":r}});if(!e.ok){let r=await e.text();return t.status(500).json({error:"Failed to get token",detail:r})}let o=await e.text();t.status(200).json({token:o,region:n})}catch(e){t.status(500).json({error:"Token fetch error",detail:String(e)})}}let u=(0,a.l)(n,"default"),c=(0,a.l)(n,"config"),d=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/azure-token",pathname:"/api/azure-token",bundlePath:"",filename:""},userland:n})},7153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},1802:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=9941);module.exports=r})();